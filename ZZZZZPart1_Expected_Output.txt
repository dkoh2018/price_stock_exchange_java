

Test - PriceFactory.makePrice(String):
	1) Should say $345.00: $345.00 (PASS)
	2) Should say $0.00: $0.00 (PASS)
	3) Should say $0.48: $0.48 (PASS)
	4) Should say $16.90: $16.90 (PASS)
	5) Should say $54.47: $54.47 (PASS)
	6) Should say $2.50: $2.50 (PASS)
	7) Should say $2,345.67: $2,345.67 (PASS)
	8) Should say $-13.12: $-13.12 (PASS)
	9) Should say $-15.00: $-15.00 (PASS)
	10) Should say $-0.35: $-0.35 (PASS)
	11) Should say $2.15: $2.15 (PASS)
	12) Should say $98.76: $98.76 (PASS)
	13) Should say $4.00: $4.00 (PASS)
	14) Should say $5.00: $5.00 (PASS)
	15) Should say $9,876,543.21: $9,876,543.21 (PASS)
	16) Should throw an InvalidPriceException (too many decimal places): 		InvalidPriceException: Invalid price String value: 34.5678 (PASS)
	17) Should throw an InvalidPriceException (too few decimal places): 		InvalidPriceException: Invalid price String value: 12.3 (PASS)
	18) Should throw an InvalidPriceException (non-numeric in the value): 		InvalidPriceException: Invalid price String value: 12.3A (PASS)
	19) Should throw an InvalidPriceException (multiple decimal places): 		InvalidPriceException: Invalid price String value: 12.34.56 (PASS)
	20) Should throw an InvalidPriceException (empty string): 		InvalidPriceException: Invalid price String value:  (PASS)
--------------------------------------------------

Test - PriceFactory.makePrice(int):
	1) Should say $1,000.00: $1,000.00 (PASS)
	2) Should say $12.99: $12.99 (PASS)
	3) Should say $0.85: $0.85 (PASS)
	4) Should say $-75.50: $-75.50 (PASS)
	5) Should say $0.00: $0.00 (PASS)
	6) Should say $0.01: $0.01 (PASS)
	7) Should say $21,474,836.47: $21,474,836.47 (PASS)
--------------------------------------------------

Test - isNegative:
	1) Should say true: true: (PASS)
	2) Should say true: true: (PASS)
	3) Should say true: true: (PASS)
	4) Should say false: false: (PASS)
	5) Should say false: false: (PASS)
	6) Should say false: false: (PASS)
	7) Should say false: false: (PASS)
	8) Should say true: true: (PASS)
	9) Should say false: false: (PASS)
--------------------------------------------------

Test - add
	1) Result: Should say $345.00: $345.00: (PASS)
	2) Result: Should say $0.48: $0.48: (PASS)
	3) Result: Should say $17.38: $17.38: (PASS)
	4) Result: Should say $71.37: $71.37: (PASS)
	5) Result: Should say $1,012.99: $1,012.99: (PASS)
	6) Result: Should say $13.84: $13.84: (PASS)
	7) Result: Should say $-74.65: $-74.65: (PASS)
	8) Result: Should say $-75.50: $-75.50: (PASS)
	9) Result: Should say $0.01: $0.01: (PASS)
	10) Should generate an exception with an message: Cannot add null to a Price object (PASS)
--------------------------------------------------

Test - subtract
	1) Result: Should say $345.00: $345.00: (PASS)
	2) Result: Should say $-0.48: $-0.48: (PASS)
	3) Result: Should say $-16.42: $-16.42: (PASS)
	4) Result: Should say $-37.57: $-37.57: (PASS)
	5) Result: Should say $0.00: $0.00: (PASS)
	6) Result: Should say $987.01: $987.01: (PASS)
	7) Result: Should say $12.14: $12.14: (PASS)
	8) Result: Should say $76.35: $76.35: (PASS)
	9) Result: Should say $-75.50: $-75.50: (PASS)
	10) Result: Should say $0.00: $0.00: (PASS)
	11) Should generate an exception with a message: Cannot subtract null from a Price object (PASS)
--------------------------------------------------

Test - multiply
	1) Should say $2,760.0: $2,760.00: (PASS)
	2) Should say $0.00: $0.00: (PASS)
	3) Should say $10.56: $10.56: (PASS)
	4) Should say $169.00: $169.00: (PASS)
	5) Should say $-163.41: $-163.41: (PASS)
	6) Should say $0.00: $0.00: (PASS)
	7) Should say $2,000.00: $2,000.00: (PASS)
	8) Should say $12.99: $12.99: (PASS)
	9) Should say $37.40: $37.40: (PASS)
--------------------------------------------------

Test - greaterOrEqual
	1) Should say true: true: (PASS)
	2) Should say true: true: (PASS)
	3) Should say false: false: (PASS)
	4) Should say false: false: (PASS)
	5) Should say false: false: (PASS)
	6) Should say true: true: (PASS)
	7) Should say false: false: (PASS)
	8) Should say false: false: (PASS)
	9) Should say false: false: (PASS)
	10) Should say true: true: (PASS)
	11) Should say true: true: (PASS)
	12) Should say true: true: (PASS)
	13) Should say true: true: (PASS)
	14) Should generate an exception with a message: Cannot check greater than or equal with a null (PASS)
--------------------------------------------------

Test - lessOrEqual
	1) Should say true: true: (PASS)
	2) Should say false: false: (PASS)
	3) Should say true: true: (PASS)
	4) Should say true: true: (PASS)
	5) Should say true: true: (PASS)
	6) Should say false: false: (PASS)
	7) Should say true: true: (PASS)
	8) Should say true: true: (PASS)
	9) Should say true: true: (PASS)
	10) Should say false: false: (PASS)
	11) Should say false: false: (PASS)
	12) Should say false: false: (PASS)
	13) Should say false: false: (PASS)
	14) Should generate an exception with a message: Cannot check less than or equal with a null (PASS)
--------------------------------------------------

Test - greaterThan
	1) Should say false: false: (PASS)
	2) Should say true: true: (PASS)
	3) Should say false: false: (PASS)
	4) Should say false: false: (PASS)
	5) Should say false: false: (PASS)
	6) Should say true: true: (PASS)
	7) Should say false: false: (PASS)
	8) Should say false: false: (PASS)
	9) Should say false: false: (PASS)
	10) Should say true: true: (PASS)
	11) Should say true: true: (PASS)
	12) Should say true: true: (PASS)
	13) Should say true: true: (PASS)
	14) Should generate an exception with a message: Cannot check greater than with a null (PASS)
--------------------------------------------------

Test - lessThan
	1) Should say false: false: (PASS)
	2) Should say false: false: (PASS)
	3) Should say true: true: (PASS)
	4) Should say true: true: (PASS)
	5) Should say true: true: (PASS)
	6) Should say false: false: (PASS)
	7) Should say true: true: (PASS)
	8) Should say true: true: (PASS)
	9) Should say true: true: (PASS)
	10) Should say false: false: (PASS)
	11) Should say false: false: (PASS)
	12) Should say false: false: (PASS)
	13) Should say false: false: (PASS)
	14) Should generate an exception with a message: Cannot check less than with a null (PASS)
--------------------------------------------------

Test - equals
	1) Should say true: true: (PASS)
	2) Should say false: false: (PASS)
	3) Should say false: false: (PASS)
	4) Should say false: false: (PASS)
	5) Should say false: false: (PASS)
	6) Should say false: false: (PASS)
	7) Should say false: false: (PASS)
	8) Should say true: true: (PASS)
	9) Should say false: false: (PASS)
	10) Should say false: false: (PASS)
	11) Should say false: false: (PASS)
	12) Should say false: false: (PASS)
	13) Should say true: true: (PASS)
--------------------------------------------------

Test - compareTo
	1) Should generate zero 0: (PASS)
	2) Should generate a positive number: 34500: (PASS)
	3) Should generate a negative number: -48: (PASS)
	4) Should generate a negative number: -1642: (PASS)
	5) Should generate a negative number: -3757: (PASS)
	6) Should generate zero: 0: (PASS)
	7) Should generate a negative number: -1: (PASS)
	8) Should generate zero: 0: (PASS)
	9) Should generate a positive number: 98701: (PASS)
	10) Should generate a positive number: 1214: (PASS)
	11) Should generate a positive number: 7635: (PASS)
--------------------------------------------------

Test - hashCode
	1) Should generate true: true: (PASS)
	2) Should generate false: false: (PASS)
	3) Should generate false: false: (PASS)
	4) Should generate false: false: (PASS)
	5) Should generate false: false: (PASS)
	6) Should generate false: false: (PASS)
	7) Should generate false: false: (PASS)
	8) Should generate false: false: (PASS)
	9) Should generate true: true: (PASS)
	10) Should generate false: false: (PASS)
	11) Should generate false: false: (PASS)
	12) Should generate true: true: (PASS)
	13) Should generate true: true: (PASS)


